{"version":3,"sources":["components/Navigation/Navbar.js","components/Category/CategoryDetail.js","components/Posts/PostDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","categories","setCategories","useEffect","axios","method","url","then","response","data","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","map","c","to","pathname","fromDashboard","name","CategoryDetail","match","category","setCategory","posts","setPosts","params","p","title","content","PostDetail","post","setPost","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAoCeA,MA/Bf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OATAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,wCACJC,MAAK,SAAAC,GACNN,EAAcM,EAASC,WAExB,IAGD,qBAAKC,UAAU,gDAAf,SACF,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAASC,iBAAe,WAAWC,iBAAe,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,oBAApL,SACE,sBAAMP,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BQ,GAAG,qBAA7C,SACE,qBAAKR,UAAU,aAAf,SACGT,EAAWkB,KAAI,SAAAC,GAAC,OACf,cAAC,IAAD,CAAMV,UAAU,WAAWW,GAAI,CAAEC,SAAS,aAAD,OAAeF,EAAEF,GAAjB,KAAwBK,eAAe,GAAhF,SAA0FH,EAAEI,oB,OCWvFC,MAlCf,YAAoC,IAATC,EAAQ,EAARA,MACzB,EAAgC1B,mBAAS,IAAzC,mBAAO2B,EAAP,KAAiBC,EAAjB,KACA,EAA0B5B,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcC,EAAd,KACMZ,EAAKQ,EAAMK,OAAOb,GAYxB,OAVAf,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAI,sCAAD,OAAwCY,EAAxC,OACFX,MAAK,SAAAC,GACNoB,EAAYpB,EAASC,MACrBqB,EAAStB,EAASC,WAEnB,CAACS,IAGF,oDACoBS,EAAST,GAC3B,2CAAcS,EAASH,QACvB,uBACA,qBAAKd,UAAU,MAAf,SACGmB,EAAMV,KAAI,SAAAa,GAAC,OACV,sBAAKtB,UAAU,WAAf,UACE,6BAAKsB,EAAEC,QACP,4BAAID,EAAEE,UACN,4BAAIF,EAAEd,KACN,cAAC,IAAD,CAAMG,GAAI,CAAEC,SAAS,SAAD,OAAWU,EAAEd,IAAMK,eAAe,GAAtD,oDAJ6BS,EAAEd,aCF5BiB,MArBf,YAA+B,IAATT,EAAQ,EAARA,MACpB,cAAwB1B,WAAxB,GAAOoC,EAAP,KAAaC,EAAb,KACMnB,EAAKQ,EAAMK,OAAOb,GAWxB,OATAf,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAI,sCAAD,OAAwCY,EAAxC,OACFX,MAAK,SAAAC,GACN6B,EAAQ7B,EAASC,WAElB,CAACS,IAGF,gDACgBkB,EAAKlB,GACnB,wCAAYkB,EAAKH,aCGRK,MAdf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,KAAK,aAAaC,OAAK,EAACC,UAAWN,IAC1C,cAAC,IAAD,CAAOI,KAAK,gBAAgBC,OAAK,EAACC,UAAWhB,aCHxCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95851ee0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction Navbar() {\r\n  const [categories, setCategories] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: 'http://127.0.0.1:8000/api/category/'\r\n    }).then(response => {\r\n      setCategories(response.data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      <div className=\"navbar-nav\">\r\n        {categories.map(c =>\r\n          <Link className='nav-link' to={{ pathname: `/category/${c.id}/`, fromDashboard: false }}>{c.name}</Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CategoryDetail ({ match }){\r\n  const [category, setCategory] = useState({})\r\n  const [posts, setPosts] = useState([])\r\n  const id = match.params.id\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `http://127.0.0.1:8000/api/category/${id}/`\r\n    }).then(response => {\r\n      setCategory(response.data)\r\n      setPosts(response.data)\r\n    })\r\n  }, [id])\r\n\r\n  return(\r\n    <div>\r\n      Category with id {category.id}\r\n      <p>Category: {category.name}</p>\r\n      <hr/>\r\n      <div className='row'>\r\n        {posts.map(p => (\r\n          <div className='col-md-4' key={p.id}>\r\n            <h4>{p.title}</h4>\r\n            <p>{p.content}</p>\r\n            <p>{p.id}</p>\r\n            <Link to={{ pathname: `/post/${p.id}`, fromDashboard: false }}>Детали</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryDetail","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction PostDetail({ match }){\r\n  const [post, setPost] = useState\r\n  const id = match.params.id\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `http://127.0.0.1:8000/api/blogpost/${id}/`\r\n    }).then(response => {\r\n      setPost(response.data)\r\n    })\r\n  }, [id])\r\n\r\n  return (\r\n    <div>\r\n      Post with id {post.id}\r\n      <p>Title: { post.title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostDetail","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from './components/Navigation/Navbar';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom'\nimport CategoryDetail from './components/Category/CategoryDetail';\nimport PostDetail from './components/Posts/PostDetail';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <Navbar/>\n        <Switch>\n          <Route path='/posts/:id' exact component={PostDetail}></Route>\n          <Route path='/category/:id' exact component={CategoryDetail}></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}